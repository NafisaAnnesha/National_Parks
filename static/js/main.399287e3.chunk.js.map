{"version":3,"sources":["Components/Navbar/Navbar.js","Components/LoadingAnimation/LoadingAnimation.js","Components/Activities/Activities.js","Pages/Home/Home.js","Pages/ParkInformation/ParkInfo.js","Pages/ParksWithSameActivity/Parks.js","Pages/WebcamImages/WcImages.js","App.js","index.js"],"names":["Navbar","className","to","LoadingAnimation","Activities","useContext","ActivitiesContext","activities","navigate","useNavigate","length","map","activity","onClick","id","name","parks","Home","ParkInfo","parkCode","useParams","useState","parkData","setParkData","useEffect","url","fetch","then","res","json","pData","data","fullName","description","href","alt","target","rel","Parks","setActivity","activityId","activityData","find","park","designation","states","seeInfo","smooth","duration","exact","WcImages","console","log","images","i","src","createContext","App","setActivities","Provider","value","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.399287e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\n\r\n// Navigation bar\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <div className=\"logo-container\">\r\n              \r\n        <Link to=\"/\" className=\"text-logo\">National Park\r\n                                               </Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './LoadingAnimation.css';\r\n\r\n//  SImple loading text appears when data is being loaded from the api\r\nconst LoadingAnimation = () => {\r\n    return (\r\n        <div className=\"animation-container\">\r\n            <h1 className=\"animation-text\">Loading...</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingAnimation;","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ActivitiesContext } from \"../../App\";\r\nimport LoadingAnimation from \"../LoadingAnimation/LoadingAnimation\";\r\nimport \"./Activities.css\";\r\n\r\n\r\n\r\n//  Main component function\r\nconst Activities = () => {\r\n        //  using the context api created on the App.js file.\r\n        const [activities, setActivities] = useContext(ActivitiesContext);\r\n\r\n        //  using useNavigate react hook. (before it was useHistory. In the last update or react router dom it is using as useNavigate)\r\n        const navigate = useNavigate();\r\n        \r\n      //  Function to handle the clik command to  pull up the user in the parks page\r\n      const seeParks =(data)=>{  \r\n        navigate(`/${data.id}`);\r\n      } ;\r\n  \r\n       \r\n  return (\r\n    <div className=\"activities-container\">\r\n      <>\r\n      {activities.length > 0 && (\r\n        <h1 className=\"activities-title\">\r\n          All activities to do at different national parks!\r\n        </h1>\r\n      )}\r\n      <p className=\"info-text\">Click any activity to see parks</p>\r\n      </>\r\n      <div className=\"grid-items\">\r\n        {\r\n          // checking if the data available or not with ternary operation. \r\n          activities.length > 0 \r\n          ? (\r\n            activities.map((activity) => (\r\n            <div className=\"activity-box\" onClick={()=>seeParks(activity)} key={activity.id}>\r\n              <h2 className=\"activity-title\">{activity.name}</h2>\r\n              <p className=\"total-parks\">Active on <span>{activity.parks.length}</span> parks</p>\r\n            </div>\r\n          ))\r\n        ) \r\n        : (\r\n          <LoadingAnimation />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activities;","import React from 'react';\r\nimport Activities from '../../Components/Activities/Activities';\r\nimport './Home.css';\r\n\r\n\r\n//  Home component. It is the landing page of the application.\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"homepage-container\">\r\n            <Activities/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport './ParkInfo.css';\r\n\r\n\r\nconst ParkInfo = () => {\r\n    //  using useParams react hook to capture the parkCode from url parameters\r\n    const {parkCode} = useParams();\r\n    const [parkData, setParkData] = useState({});\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //  Integreting the second API  to show detailed park information with the park code\r\n    useEffect(()=>{\r\n        let url=`https://developer.nps.gov/api/v1/parks?parkCode=${parkCode}&api_key=G7HmcqAc4yMhuDjCOazuI5bw71u2uzfLh3WOM9wg`;\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(pData => setParkData(pData.data[0]))\r\n    }, [parkCode])\r\n\r\n    //  function to handle click and navigate the user in the WcImages.js page\r\n    const seeImages = ()=>{\r\n        navigate(`/images/${parkCode}`)\r\n    };\r\n    return (\r\n        <>\r\n        {\r\n            parkData \r\n            &&\r\n            // showing the parkInfo-container\r\n            <div className=\"parkInfo-container\">\r\n            <h2 className=\"park-title\">{parkData.fullName} </h2>\r\n            <p className=\"park-description\">{parkData.description}</p>\r\n            <div className=\"button-container\">\r\n                <button className=\"learnMore-button\" onClick={()=> seeImages()}>See Photos</button>\r\n                <a href={parkData.url} alt=\"/\" className=\"link-button\" target=\"_blank\" rel=\"noreferrer\">Website</a>\r\n            </div>\r\n            </div>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParkInfo;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Outlet, useNavigate, useParams } from 'react-router';\r\nimport { Link } from 'react-scroll';\r\nimport { ActivitiesContext } from '../../App';\r\nimport LoadingAnimation from '../../Components/LoadingAnimation/LoadingAnimation';\r\nimport './Parks.css';\r\n\r\n//  Main functional component\r\nconst Parks = () => {\r\n    //  again using the ActivitiesContext\r\n    const [activities, setActivities] = useContext(ActivitiesContext);\r\n    const [activity, setActivity] = useState([]);\r\n    const {activityId} = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    //  handling onClick event\r\n    const seeInfo = (park)=>{\r\n        navigate(`/${activity.id}/${park.parkCode}`);\r\n    };\r\n\r\n    // finding specific activity with the activityId from the activities(API data) array inside the useEffect hook and array.find() function. \r\n    useEffect(()=>{\r\n        const activityData = activities.find(activity => activity.id === activityId);\r\n        setActivity(activityData);\r\n    }, [activityId, activities])\r\n\r\n    return (\r\n         <div className=\"mainParks-container\">\r\n                <>\r\n                <h1 className=\"parks-title\">\r\n                    All the parks that offers the activity: <span>{activity?.name}</span>\r\n                </h1>\r\n                <p className=\"total-parks\">Active on <span>{activity?.parks?.length}</span> parks</p>\r\n                </>\r\n                <div className=\"parkInfo-container\" id=\"parkInfo\">\r\n                    {/*specify the position where the park info will be shown. */}\r\n                    <Outlet className=\"parkInfo\" />\r\n                </div>\r\n        <div className=\"parks-container\">\r\n            {\r\n                //  checking the data if available or not with ternary operation.\r\n                activity?.parks?.length > 0\r\n                ?\r\n                activity?.parks?.map(park => \r\n                         <div className=\"park-box\"  key={park.parkCode} href=\"#parkInfo\">\r\n                            <h2 className=\"park-title\">{park.fullName}</h2>\r\n                            <p >Designation:  \r\n                                <span className=\"park-designation\"> {park.designation}</span>\r\n                            </p>\r\n                            <p className=\"park-location\">Located In: {park.states}</p>\r\n                            <Link to=\"parkInfo\" onClick={()=> seeInfo(park)}  smooth={true} duration={800} exact=\"true\" className=\"learnMore-button\">Learn More</Link>\r\n                        </div>\r\n                    )\r\n                    : <LoadingAnimation/>\r\n   \r\n            }\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Parks;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport LoadingAnimation from '../../Components/LoadingAnimation/LoadingAnimation';\r\nimport './WcImages.css';\r\n\r\nconst WcImages = () => {\r\nconst {parkCode} = useParams();\r\nconst [parkData, setParkData] = useState([]);\r\n\r\n//  Integreting the API last time. \r\nuseEffect(()=>{\r\n   const url=`https://developer.nps.gov/api/v1/parks?parkCode=${parkCode}&api_key=G7HmcqAc4yMhuDjCOazuI5bw71u2uzfLh3WOM9wg`;\r\n   fetch(url)\r\n   .then(res => res.json())\r\n   .then(data => setParkData(data?.data[0]))\r\n}, [parkCode]);\r\n//  gets data according to the parkCode\r\nconsole.log(parkData)\r\n    return (\r\n        <div className=\"images-container\">\r\n            <h2 className=\"park-title\">Showing the <span>{parkData.fullName}</span></h2>\r\n            {\r\n                parkData?.images?.length > 0\r\n                ?\r\n                parkData?.images?.map(i=>\r\n                    <div className=\"park-image\">\r\n                        <img src={i.url} alt=\"Park_Image\" />\r\n                    </div>\r\n                )\r\n                :\r\n                <LoadingAnimation/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WcImages;","import { createContext, useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router';\nimport './App.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navbar from './Components/Navbar/Navbar';\nimport Home from './Pages/Home/Home';\nimport ParkInfo from './Pages/ParkInformation/ParkInfo';\nimport Parks from './Pages/ParksWithSameActivity/Parks';\nimport WcImages from './Pages/WebcamImages/WcImages';\n\n\n\n//  Creating the Activities context to use the activity data from anywhere of the applicationl.\nexport const ActivitiesContext = createContext();\n\n\nfunction App() {\n  const [activities, setActivities] = useState([]);\n  \n   //  Integretining the 1st  API  \n   useEffect(() => {\n    const apiURL = `https://developer.nps.gov/api/v1/activities/parks?api_key=G7HmcqAc4yMhuDjCOazuI5bw71u2uzfLh3WOM9wg`;\n    fetch(apiURL)\n      .then((res) => res.json())\n      .then((data) => setActivities(data.data))\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      {/* Wrapping the app elements inside the ActivitiesContext and providing the data as value. */}\n    <ActivitiesContext.Provider value={[activities, setActivities]}>\n        <Router>\n        <Navbar/>\n        <Routes>\n          <Route path=\"/\" element={<Home/>}/>\n          <Route path=\"/:activityId\" element={<Parks/>} >\n              <Route path=\":parkCode\" element={<ParkInfo/>} />\n          </Route>\n          <Route path=\"/images/:parkCode\" element={<WcImages/>} />\n        </Routes>\n        </Router>\n    </ActivitiesContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(  <App /> ,document.getElementById\n  ('root'));\n\n"],"sourceRoot":""}